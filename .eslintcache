[{"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\index.js":"1","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\App.js":"2","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\theme.js":"3","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\routes.js":"4","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\styles\\global.js":"5","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\services\\auth.js":"6","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Categorias\\index.js":"7","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Error\\index.js":"8","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\index.js":"9","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\services\\api.js":"10","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Navbar\\index.js":"11","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Navbar\\listItems.js":"12","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Login\\index.js":"13","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Questoes\\index.js":"14","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Perfil\\index.js":"15","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Ranking\\index.js":"16","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Cadastro\\index.js":"17","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\ExploreMais\\index.js":"18","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Home\\index.js":"19","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Sobre\\index.js":"20","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Ajuda\\index.js":"21","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\QuizReserva.js":"22","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\Questao2.js":"23","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\Questao.js":"24","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\LoginUsuario\\index.js":"25","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\PaginaInicial\\index.js":"26","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\CadastroAdmin\\index.js":"27","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\dialog.js":"28","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\Progresso.js":"29"},{"size":402,"mtime":1609255190267,"results":"30","hashOfConfig":"31"},{"size":138,"mtime":1609255122118,"results":"32","hashOfConfig":"31"},{"size":1057,"mtime":1610139862029,"results":"33","hashOfConfig":"31"},{"size":2200,"mtime":1610810127197,"results":"34","hashOfConfig":"31"},{"size":414,"mtime":1609255190337,"results":"35","hashOfConfig":"31"},{"size":342,"mtime":1608563622851,"results":"36","hashOfConfig":"31"},{"size":370,"mtime":1609255190285,"results":"37","hashOfConfig":"31"},{"size":681,"mtime":1609273770630,"results":"38","hashOfConfig":"31"},{"size":2595,"mtime":1610812238891,"results":"39","hashOfConfig":"31"},{"size":366,"mtime":1609255190335,"results":"40","hashOfConfig":"31"},{"size":4556,"mtime":1610809969172,"results":"41","hashOfConfig":"31"},{"size":1060,"mtime":1610040454565,"results":"42","hashOfConfig":"31"},{"size":4088,"mtime":1610458318945,"results":"43","hashOfConfig":"31"},{"size":9476,"mtime":1610811221098,"results":"44","hashOfConfig":"31"},{"size":3703,"mtime":1610471183998,"results":"45","hashOfConfig":"31"},{"size":361,"mtime":1609255190329,"results":"46","hashOfConfig":"31"},{"size":7615,"mtime":1610478868356,"results":"47","hashOfConfig":"31"},{"size":11785,"mtime":1610759227489,"results":"48","hashOfConfig":"31"},{"size":6318,"mtime":1610765016258,"results":"49","hashOfConfig":"31"},{"size":629,"mtime":1610476647281,"results":"50","hashOfConfig":"31"},{"size":393,"mtime":1610479968208,"results":"51","hashOfConfig":"31"},{"size":3198,"mtime":1610142022680,"results":"52","hashOfConfig":"31"},{"size":1550,"mtime":1610040454565,"results":"53","hashOfConfig":"31"},{"size":1990,"mtime":1610811758987,"results":"54","hashOfConfig":"31"},{"size":4095,"mtime":1610807491137,"results":"55","hashOfConfig":"31"},{"size":2558,"mtime":1610809047746,"results":"56","hashOfConfig":"31"},{"size":6034,"mtime":1610809583069,"results":"57","hashOfConfig":"31"},{"size":2535,"mtime":1610812285063,"results":"58","hashOfConfig":"31"},{"size":1468,"mtime":1610812409138,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ll3y6t",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\index.js",[],["128","129"],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\App.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\theme.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\routes.js",["130"],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\styles\\global.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\services\\auth.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Categorias\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Error\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\services\\api.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Navbar\\index.js",["131"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Drawer, AppBar, Button } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { mainListItems } from './listItems';\r\nimport { logout } from \"../../services/auth\";\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../images/icons/logo.svg'\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\nimg:{\r\n  width:\"40px\",\r\n  height:\"40px\",\r\n\r\n},\r\n\r\nbotaosair:{\r\n  margin: theme.spacing(3, 0, 2),\r\n    color:\"white\",\r\n    background:\"#3B82F6\",\r\n}\r\n\r\n\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleLogout = e => {\r\n    logout();\r\n    window.location.href = '/';\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\" color='inhert' className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          <Link to='/home'> <img src={logo} className={classes.img}/></Link>\r\n          </Typography>\r\n          <Badge color=\"secondary\">\r\n            <Button className={classes.botaosair} onClick={handleLogout}>\r\n              Sair <ExitToAppIcon />\r\n            </Button>\r\n          </Badge>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n          Mageo Quiz\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Navbar\\listItems.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Login\\index.js",["132","133"],"import React , { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport {login} from \"../../services/auth\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ReactLoading from 'react-loading';\r\nimport logo from '../../images/icons/logo.svg'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:\"white\",\r\n    background:\"#3B82F6\",\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [carregar,setCarregando] = useState(false);\r\n  const history = useHistory();\r\n  \r\n  async function fazerLogin(e) {\r\n    \r\n    e.preventDefault();\r\n    \r\n    const data = { email, senha };\r\n    try {\r\n          localStorage.setItem('email',email)\r\n          setCarregando(true);\r\n          const resposta = await api.post(\"/login\", data);\r\n          login(resposta.data.token)\r\n          alert(\"Login Realizado com Sucesso\");\r\n          history.push(\"/home\");\r\n      } catch (error) {\r\n          //console.log(error.response.data.message.error)\r\n          console.log(error.response.data)\r\n          //setError(error.response.data.message.error)\r\n          if(error.response.status===400){\r\n          setError(error.response.data.message.error);\r\n          }else{\r\n          setError(\"Senha Incorreta\");\r\n          }\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <img src={logo}/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          MaGeo\r\n        </Typography>                   \r\n\r\n        <form className={classes.form} onSubmit={fazerLogin} noValidate>            \r\n        {carregar && !error?<ReactLoading className='loading' type={\"bubbles\"} color={'#36BD8C'} height={'20%'} width={'20%'} />:<></>}\r\n            {error && <p className='error'>{error}</p>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Digite o seu Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={senha}\r\n            onChange={e => setSenha(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Entrar\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to='/cadastro'>\r\n                Fazer Cadastro\r\n            </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Questoes\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Perfil\\index.js",["134"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Grid, CardActionArea, CardContent, Typography } from '@material-ui/core'\r\nimport Navbar from '../Navbar';\r\nimport api from '../../services/api'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/* const useStyles = makeStyles((theme) => ({\r\n    tamanhocard: {\r\n        width: '100%'\r\n    }\r\n}))\r\n */\r\n\r\n\r\n\r\n\r\n\r\nfunction Perfil(props) {\r\n    const [items, setItems] = useState([])\r\n    useEffect(() => {\r\n        const email = localStorage.getItem('email')\r\n        const getItems = async () => {\r\n            try {\r\n                const response = await api.get('/perfil', { headers: { email: email } });\r\n                setItems(response.data)\r\n            } catch (error) {\r\n                console.log(error);\r\n                alert(\"Erro em carregar os dados\")\r\n            }\r\n        }\r\n        getItems()\r\n    }, []);\r\n\r\n\r\n\r\n    const datanascimento = new Date(items.dataNascimento);\r\n    console.log(datanascimento)\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Container>\r\n                <h2 style={{ margin: 20, color: '#098348' }}>Olá, {items.nome}</h2>\r\n            </Container>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Dados do usuario\r\n                           </Typography>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{items.nome} {items.sobrenome}\r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{items.email}\r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{datanascimento.toDateString()}\r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{items.ano_escolar}\r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{items.escola}\r\n                                </Typography>\r\n\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Ranking\r\n                           </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card >\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    Pontuação\r\n                           </Typography>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Conquistas\r\n                           </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Perfil;","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Ranking\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Cadastro\\index.js",["135","136"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ReactLoading from 'react-loading';\r\nimport logo from '../../images/icons/logo.svg'\r\nimport { MenuItem, Select, InputLabel,} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:\"white\",\r\n    background:\"#3B82F6\",\r\n  },\r\n  tamanhoselectano:{\r\n    minWidth:394,\r\n\r\n  }\r\n}));\r\n\r\nexport default function Cadastro() {\r\n  const classes = useStyles();\r\n  const [nome, setNome] = useState(\"\");\r\n  const [sobrenome, setSobrenome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [dataNascimento, setdataNascimento] = useState(\"\");\r\n  const[ano_escolar,setAno_escolar]= useState(\"\")\r\n  const[escola, setEscola] = useState(\"\")\r\n  const [error, setError] = useState(\"\");\r\n  const [carregar,setCarregando] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  async function cadastrar(e) {\r\n\r\n    e.preventDefault();\r\n\r\n    const data = { nome, sobrenome,email, senha, dataNascimento, ano_escolar, escola };\r\n    try {\r\n      setCarregando(true);\r\n      await api.post(\"/user\", data)\r\n      alert(\"Cadastro Realizado com Sucesso\")\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.response.status);\r\n      console.log(error.response)\r\n      if(error.response.status === 400){\r\n        setError(error.response.data.message.error)\r\n      }else{\r\n        setError(\"Houve Problema ao realizar o cadastro\")\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <img src={logo}/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastro\r\n        </Typography>\r\n        {carregar && !error?<ReactLoading className='loading' type={\"bubbles\"} color={'orange'} height={'20%'} width={'40%'} />:<></>}\r\n        <form className={classes.form} onSubmit={cadastrar}>\r\n        {error && <p className='error'>{error}</p>}\r\n        \r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Nome\"\r\n                autoFocus\r\n                value={nome}\r\n                onChange={e => setNome(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"sobrenome\"\r\n                label=\"Sobrenome\"\r\n                name=\"sobrenome\"\r\n                autoComplete=\"lname\"\r\n                value={sobrenome}\r\n                onChange={e => setSobrenome(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"dataNascimento\"\r\n                label=\"dataNascimento\"\r\n                type=\"date\"\r\n                autoComplete=\"dataNascimento\"\r\n                value={dataNascimento}\r\n                onChange={e => setdataNascimento(e.target.value)}\r\n              />\r\n            </Grid>\r\n           {/*  <Grid item xs={12}>\r\n            <Select id=\"Serie\" value={ano_escolar} onChange={e => setAno_escolar(e.target.value)} variant=\"outlined\" className={classes.tamanhoselectano}>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">Selecione o Ano</InputLabel>\r\n                  <MenuItem value={\"6º Ano\"}> 6º Ano</MenuItem>\r\n                  <MenuItem value={\"7º Ano\"}> 7º Ano</MenuItem>\r\n                  <MenuItem value={\"8º Ano\"}> 8º Ano</MenuItem>\r\n                  <MenuItem value={\"9º Ano\"}> 9º Ano</MenuItem>\r\n                  <MenuItem value={\"1º Ano\"}> 1º Ano</MenuItem>\r\n                  <MenuItem value={\"2º Ano\"}> 2º Ano</MenuItem>\r\n                  <MenuItem value={\"3º Ano\"}> 3º Ano</MenuItem>\r\n                </Select>\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n            <TextField id=\"Serie\" value={ano_escolar} onChange={e => setAno_escolar(e.target.value)} variant=\"outlined\" select fullWidth label=\"selecione o ano\" >\r\n            <InputLabel id=\"demo-simple-select-helper-label\">Selecione o Ano</InputLabel>\r\n                  <MenuItem value={\"6º Ano\"}> 6º Ano</MenuItem>\r\n                  <MenuItem value={\"7º Ano\"}> 7º Ano</MenuItem>\r\n                  <MenuItem value={\"8º Ano\"}> 8º Ano</MenuItem>\r\n                  <MenuItem value={\"9º Ano\"}> 9º Ano</MenuItem>\r\n                  <MenuItem value={\"1º Ano\"}> 1º Ano</MenuItem>\r\n                  <MenuItem value={\"2º Ano\"}> 2º Ano</MenuItem>\r\n                  <MenuItem value={\"3º Ano\"}> 3º Ano</MenuItem>\r\n                </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"escola\"\r\n                label=\"Escola\"\r\n                name=\"escola\"\r\n                value={escola}\r\n                onChange={e => setEscola(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"senha\"\r\n                label=\"senha\"\r\n                type=\"password\"\r\n                id=\"senha\"\r\n                autoComplete=\"current-password\"\r\n                value={senha}\r\n                onChange={e => setSenha(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Cadastrar\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to='/'>\r\n                Ir para o login\r\n              </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\ExploreMais\\index.js",["137","138","139","140","141"],"import React from 'react';\r\nimport { Container, Card, Grid, CardMedia, CardActionArea, CardContent, Typography, CardActions, Button } from '@material-ui/core'\r\nimport Navbar from '../Navbar';\r\nimport logo from '../../images/imagen1.jpg';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction ExploreMais() {\r\n    var cardStyle = {\r\n        display: 'block',\r\n        width: '600px',\r\n        // transitionDuration: '0.3s',\r\n        height: '800px',\r\n         marginLeft: 0 \r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Container>\r\n                <h2 style={{ margin: 20, color: '#948324' }}>ExploreMais</h2>\r\n            </Container>\r\n           {/*  <Box display=\"flex\">\r\n           \r\n              <Box p={10} justifyContent=\"flex-end\" >\r\n                \r\n                <p>\r\n                5. (Enem 2019) Em um condomínio, uma área pavimentada, que tem a forma de um círculo com diâmetro medindo 6 m, é cercada por grama. A administração do condomínio deseja ampliar essa área, mantendo seu formato circular, e aumentando, em 8 m, o diâmetro dessa região, mantendo o revestimento da parte já existente. O condomínio dispõe, em estoque, de material suficiente para pavimentar mais 100 m² de área.\r\n\r\n                    O síndico do condomínio irá avaliar se esse material disponível será suficiente para pavimentar a região a ser ampliada.\r\n\r\n                    Utilize 3 como aproximação para π.\r\n\r\n                    A conclusão correta a que o síndico deverá chegar, considerando a nova área a ser pavimentada, é a de que o material disponível em estoque\r\n                                        \r\n                </p>\r\n                <p>\r\n                <br/>\r\n                (A)será suficiente, pois a área da nova região a ser pavimentada mede 21 m2.\r\n                <br/>\r\n                (B) será suficiente, pois a área da nova região a ser pavimentada mede 24 m2.\r\n                (C)será suficiente, pois a área da nova região a ser pavimentada mede 48 m2.\r\n                (D)não será suficiente, pois a área da nova região a ser pavimentada mede 108 m2.\r\n                (E)não será suficiente, pois a área da nova região a ser pavimentada mede 120 m2.\r\n                </p>\r\n                <br/>\r\n                <p>\r\n                5. (Enem 2019) Em um condomínio, uma área pavimentada, que tem a forma de um círculo com diâmetro medindo 6 m, é cercada por grama. A administração do condomínio deseja ampliar essa área, mantendo seu formato circular, e aumentando, em 8 m, o diâmetro dessa região, mantendo o revestimento da parte já existente. O condomínio dispõe, em estoque, de material suficiente para pavimentar mais 100 m² de área.\r\n\r\n                    O síndico do condomínio irá avaliar se esse material disponível será suficiente para pavimentar a região a ser ampliada.\r\n\r\n                    Utilize 3 como aproximação para π.\r\n\r\n                    A conclusão correta a que o síndico deverá chegar, considerando a nova área a ser pavimentada, é a de que o material disponível em estoque\r\n                                        \r\n                </p>\r\n\r\n              </Box>\r\n\r\n            </Box> */}\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={10} sm={6}>\r\n                    <Card style={cardStyle}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                    Questão Geometria Plana\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                (Enem 2019) Em um condomínio, uma área pavimentada, que tem a forma de um círculo com diâmetro medindo 6 m, é cercada por grama. A administração do condomínio deseja ampliar essa área, mantendo seu formato circular, e aumentando, em 8 m, o diâmetro dessa região, mantendo o revestimento da parte já existente. O condomínio dispõe, em estoque, de material suficiente para pavimentar mais 100 m² de área.\r\n\r\n                                O síndico do condomínio irá avaliar se esse material disponível será suficiente para pavimentar a região a ser ampliada.\r\n\r\n                                Utilize 3 como aproximação para π.\r\n\r\n                                A conclusão correta a que o síndico deverá chegar, considerando a nova área a ser pavimentada, é a de que o material disponível em estoque\r\n                                            \r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"h7\" component=\"h2\">\r\n                                    <p>\r\n                                    (A)será suficiente, pois a área da nova região a ser pavimentada mede 21 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (B) será suficiente, pois a área da nova região a ser pavimentada mede 24 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (C)será suficiente, pois a área da nova região a ser pavimentada mede 48 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (D)não será suficiente, pois a área da nova região a ser pavimentada mede 108 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (E)não será suficiente, pois a área da nova região a ser pavimentada mede \r\n                                    </p>\r\n                                    <br/>\r\n                                \r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n\r\n               \r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    <Card style={cardStyle}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                    Questão Geometria Plana\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                (Enem 2019) Em um condomínio, uma área pavimentada, que tem a forma de um círculo com diâmetro medindo 6 m, é cercada por grama. A administração do condomínio deseja ampliar essa área, mantendo seu formato circular, e aumentando, em 8 m, o diâmetro dessa região, mantendo o revestimento da parte já existente. O condomínio dispõe, em estoque, de material suficiente para pavimentar mais 100 m² de área.\r\n\r\n                                O síndico do condomínio irá avaliar se esse material disponível será suficiente para pavimentar a região a ser ampliada.\r\n\r\n                                Utilize 3 como aproximação para π.\r\n\r\n                                A conclusão correta a que o síndico deverá chegar, considerando a nova área a ser pavimentada, é a de que o material disponível em estoque\r\n                                            \r\n                                </Typography>\r\n                                <Typography gutterBottom variant=\"h7\" component=\"h2\">\r\n                                    <p>\r\n                                    (A)será suficiente, pois a área da nova região a ser pavimentada mede 21 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (B) será suficiente, pois a área da nova região a ser pavimentada mede 24 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (C)será suficiente, pois a área da nova região a ser pavimentada mede 48 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (D)não será suficiente, pois a área da nova região a ser pavimentada mede 108 m2.\r\n                                    </p>\r\n                                    <br/>\r\n                                    <p>\r\n                                    (E)não será suficiente, pois a área da nova região a ser pavimentada mede \r\n                                    </p>\r\n                                    <br/>\r\n                                \r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                    {/* <Card style={cardStyle}>\r\n                        <CardActionArea>\r\n                            <CardMedia>\r\n                                <img src={logo} width=\"300px\" />\r\n                            </CardMedia>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Video\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                    across all continents except Antarctica\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                                Learn More\r\n                            </Button>\r\n                        </CardActions>\r\n\r\n                    </Card> */}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  {/*   <Card style={cardStyle}>\r\n                        <CardActionArea>\r\n                            <CardMedia>\r\n                                <img src={logo} width=\"300px\" />\r\n                            </CardMedia>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Video\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                    across all continents except Antarctica\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                                Learn More\r\n                            </Button>\r\n                        </CardActions>\r\n\r\n                    </Card> */}\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExploreMais;","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Home\\index.js",["142","143","144","145","146","147","148"],"import React from 'react';\r\nimport { Button, Container, Grid, ThemeProvider, Card, CardMedia, CardActionArea, CardContent, Typography, CardActions } from '@material-ui/core'\r\nimport Navbar from '../Navbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { theme } from '../../theme';\r\nimport Box from '@material-ui/core/Box';\r\nimport logo from '../../images/imagen2.jpg'\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  titulo: {\r\n    textAlign: \"center\",\r\n    marginTop: 60,\r\n    fontSize: 30,\r\n    color: \"#769DE9\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  tituloregra:{ \r\n  textAlign: \"center\",\r\n  marginTop: 60,\r\n  fontSize: 30,\r\n  color: \"#769DE9\",\r\n  fontWeight: \"bold\",\r\n  paddingTop:70\r\n  \r\n},\r\n\r\n  imagem:{\r\n    borderRadius:20,\r\n    height:350,\r\n    width:500,\r\n  },\r\n  gridmargen:{\r\n    marginLeft:\"80px\",\r\n    paddingLeft:\"60px\"\r\n  }\r\n  \r\n}));\r\nconst Home = (props) => {\r\n  const classes = useStyles();\r\n  var cardStyle = {\r\n    display: 'block',\r\n    width: '300px',\r\n    // transitionDuration: '0.3s',\r\n    height: '300px',\r\n     marginLeft: 50,\r\n    \r\n   \r\n}\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <ThemeProvider theme={theme}>\r\n        <Container>\r\n\r\n         \r\n\r\n          <div className={classes.heroButtons}>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" href='/quiz'>\r\n                  Start Quiz\r\n                  </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div>\r\n            \r\n            <h1 className={classes.tituloregra}> Regras do Jogo</h1>\r\n            <Box display=\"flex\">\r\n          <Box p={10} justifyContent=\"flex-start\" >\r\n           {/*  <img src={logo} width=\"300px\" className={classes.imagem} /> */}\r\n          </Box>\r\n          <Box p={10} justifyContent=\"flex-end\" >\r\n              <ul>\r\n                <li> I - O jogador iniciará o jogo com 10 pontos. </li>\r\n                <li> II- Cada questão respondida corretamente corresponde a 10 pontos. </li>\r\n                <li> III-Se jogador acertar as 5 primeiras perguntas, recebe 50 pontos + o dobro de pontos ganho e vence o 1º desafio da fase. </li>\r\n                <li> IV- Se jogador vencer as 5 próximas perguntas, recebe 50 pontos + o dobro de pontos ganho e vence o 2º desafio da fase. </li>\r\n                <li> V-  Ao vencer os 2 desafios o jogador conquista  o emblema da fase. </li>\r\n            \r\n              </ul>\r\n          </Box>\r\n          \r\n        </Box>\r\n        <Grid container spacing={5} className={classes.gridmargen}>\r\n              <Grid item xs={12} sm={4}>\r\n                     <Card style={cardStyle}>\r\n                       <CardActionArea>\r\n                            <CardMedia>\r\n                                <img src={logo} width=\"300px\" />\r\n                            </CardMedia>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                  Emblema\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                  Pontuação\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card> \r\n                </Grid>\r\n              \r\n                <Grid item xs={12} sm={6}>\r\n                     <Card style={cardStyle}>\r\n                       <CardActionArea>\r\n                            <CardMedia>\r\n                                <img src={logo} width=\"300px\" />\r\n                            </CardMedia>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                  Emblema\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                  Pontuação\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card> \r\n                </Grid>\r\n            </Grid>\r\n            \r\n      \r\n            <h1 className={classes.titulo}> Fases do Quiz</h1>\r\n            <Box display=\"flex\">\r\n\r\n              <Box p={10} justifyContent=\"flex-start\" >\r\n                <img src={logo} width=\"300px\" />\r\n              </Box>\r\n              <Box p={10} justifyContent=\"flex-end\" >\r\n                <h1> Triângulo</h1>\r\n                <p> pré-elaborados. O formulário possui em sua estrutura opções de perguntas os em cada pergunta desenvolvida.</p>\r\n              </Box>\r\n\r\n            </Box>\r\n            <Box display=\"flex\">\r\n\r\n              <Box p={10} justifyContent=\"flex-start\" >\r\n\r\n                <h1> Quadrado</h1>\r\n                <p> pré-elaborados. O formulário possui em sua estrutura opções de perguntas os em cada pergunta desenvolvida.</p>\r\n              </Box>\r\n              <Box p={6} justifyContent=\"flex-end\" >\r\n                <img src={logo} width=\"300px\" />\r\n              </Box>\r\n\r\n            </Box>\r\n            <Box display=\"flex\">\r\n\r\n              <Box p={10} justifyContent=\"flex-start\" >\r\n                <img src={logo} width=\"300px\" />\r\n              </Box>\r\n              <Box p={10} justifyContent=\"flex-end\" >\r\n                <h1> Quadrado</h1>\r\n                <p> pré-elaborados. O formulário possui em sua estrutura opções de perguntas os em cada pergunta desenvolvida.</p>\r\n              </Box>\r\n\r\n            </Box>\r\n            <Box display=\"flex\">\r\n\r\n              <Box p={10} justifyContent=\"flex-start\" >\r\n\r\n                <h1> Círculo</h1>\r\n                <p> pré-elaborados. O formulário possui em sua estrutura opções de perguntas os em cada pergunta desenvolvida.</p>\r\n              </Box>\r\n              <Box p={6} justifyContent=\"flex-end\" >\r\n                <img src={logo} width=\"300px\" />\r\n              </Box>\r\n\r\n            </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Sobre\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Ajuda\\index.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\QuizReserva.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\Questao2.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\Questao.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\LoginUsuario\\index.js",["149","150"],"import React , { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport {login} from \"../../services/auth\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ReactLoading from 'react-loading';\r\nimport logo from '../../images/icons/logo.svg'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:\"white\",\r\n    background:\"#3B82F6\",\r\n  },\r\n}));\r\n\r\nexport default function LoginUsuario() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [carregar,setCarregando] = useState(false);\r\n  const history = useHistory();\r\n  \r\n  async function fazerLogin(e) {\r\n    \r\n    e.preventDefault();\r\n    \r\n    const data = { email, senha };\r\n    try {\r\n          localStorage.setItem('email',email)\r\n          setCarregando(true);\r\n          const resposta = await api.post(\"/login\", data);\r\n          login(resposta.data.token)\r\n          alert(\"Login Realizado com Sucesso\");\r\n          history.push(\"/home\");\r\n      } catch (error) {\r\n          //console.log(error.response.data.message.error)\r\n          console.log(error.response.data)\r\n          //setError(error.response.data.message.error)\r\n          if(error.response.status===400){\r\n          setError(error.response.data.message.error);\r\n          }else{\r\n          setError(\"Senha Incorreta\");\r\n          }\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <img src={logo}/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          MaGeo\r\n        </Typography>                   \r\n\r\n        <form className={classes.form} onSubmit={fazerLogin} noValidate>            \r\n        {carregar && !error?<ReactLoading className='loading' type={\"bubbles\"} color={'#36BD8C'} height={'20%'} width={'20%'} />:<></>}\r\n            {error && <p className='error'>{error}</p>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Digite o seu Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={senha}\r\n            onChange={e => setSenha(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Entrar\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to='/cadastro'>\r\n                Fazer Cadastro\r\n            </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\PaginaInicial\\index.js",["151","152","153","154","155","156","157","158"],"import React , { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport {login} from \"../../services/auth\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ReactLoading from 'react-loading';\r\nimport logo from '../../images/icons/logo.svg'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:\"white\",\r\n    background:\"#3B82F6\",\r\n    height:\"60px\",\r\n    width:\"100%\",\r\n  },\r\n  contain:{\r\n      marginTop:\"50px\",\r\n      marginBottom:\"60px\"\r\n  }\r\n}));\r\n\r\nexport default function PaginaInicial() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\"  className={classes.contain}> \r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <img src={logo}/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          MaGeo\r\n        </Typography>                   \r\n        <Link to='/loginUsuario'>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n             >\r\n                 Estudante\r\n          </Button>\r\n          </Link>\r\n          <Link to='/login'>\r\n                 \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n             >\r\n              Administrador   \r\n          </Button>\r\n          </Link>\r\n            \r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n             \r\n          </Grid>\r\n       \r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\CadastroAdmin\\index.js",["159","160","161","162","163","164","165"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ReactLoading from 'react-loading';\r\nimport logo from '../../images/icons/logo.svg'\r\nimport { MenuItem, Select, InputLabel,} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:\"white\",\r\n    background:\"#3B82F6\",\r\n  },\r\n  tamanhoselectano:{\r\n    minWidth:394,\r\n\r\n  }\r\n}));\r\n\r\nexport default function CadastroAdmin() {\r\n  const classes = useStyles();\r\n  const [nome, setNome] = useState(\"\");\r\n  const [sobrenome, setSobrenome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [dataNascimento, setdataNascimento] = useState(\"\");\r\n  const[ano_escolar,setAno_escolar]= useState(\"\")\r\n  const[escola, setEscola] = useState(\"\")\r\n  const [error, setError] = useState(\"\");\r\n  const [carregar,setCarregando] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  async function cadastrar(e) {\r\n\r\n    e.preventDefault();\r\n\r\n    const data = { nome, sobrenome,email, senha, dataNascimento, ano_escolar, escola };\r\n    try {\r\n      setCarregando(true);\r\n      await api.post(\"/user\", data)\r\n      alert(\"Cadastro Realizado com Sucesso\")\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.response.status);\r\n      console.log(error.response)\r\n      if(error.response.status === 400){\r\n        setError(error.response.data.message.error)\r\n      }else{\r\n        setError(\"Houve Problema ao realizar o cadastro\")\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <img src={logo}/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastro\r\n        </Typography>\r\n        {carregar && !error?<ReactLoading className='loading' type={\"bubbles\"} color={'orange'} height={'20%'} width={'40%'} />:<></>}\r\n        <form className={classes.form} onSubmit={cadastrar}>\r\n        {error && <p className='error'>{error}</p>}\r\n        \r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Nome\"\r\n                autoFocus\r\n                value={nome}\r\n                onChange={e => setNome(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"sobrenome\"\r\n                label=\"Sobrenome\"\r\n                name=\"sobrenome\"\r\n                autoComplete=\"lname\"\r\n                value={sobrenome}\r\n                onChange={e => setSobrenome(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n           \r\n           {/*  <Grid item xs={12}>\r\n            <Select id=\"Serie\" value={ano_escolar} onChange={e => setAno_escolar(e.target.value)} variant=\"outlined\" className={classes.tamanhoselectano}>\r\n            <InputLabel id=\"demo-simple-select-helper-label\">Selecione o Ano</InputLabel>\r\n                  <MenuItem value={\"6º Ano\"}> 6º Ano</MenuItem>\r\n                  <MenuItem value={\"7º Ano\"}> 7º Ano</MenuItem>\r\n                  <MenuItem value={\"8º Ano\"}> 8º Ano</MenuItem>\r\n                  <MenuItem value={\"9º Ano\"}> 9º Ano</MenuItem>\r\n                  <MenuItem value={\"1º Ano\"}> 1º Ano</MenuItem>\r\n                  <MenuItem value={\"2º Ano\"}> 2º Ano</MenuItem>\r\n                  <MenuItem value={\"3º Ano\"}> 3º Ano</MenuItem>\r\n                </Select>\r\n            </Grid> */}\r\n           \r\n           \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"senha\"\r\n                label=\"senha\"\r\n                type=\"password\"\r\n                id=\"senha\"\r\n                autoComplete=\"current-password\"\r\n                value={senha}\r\n                onChange={e => setSenha(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Cadastrar\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to='/'>\r\n                Ir para o login\r\n              </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\dialog.js",[],"C:\\Users\\PC\\myapp\\react\\projetomageo-front-end\\src\\pages\\Quiz\\Progresso.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":50,"nodeType":"172","messageId":"173","endLine":2,"endColumn":56},{"ruleId":"174","severity":1,"message":"175","line":129,"column":29,"nodeType":"176","endLine":129,"endColumn":70},{"ruleId":"170","severity":1,"message":"177","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":75,"column":11,"nodeType":"176","endLine":75,"endColumn":28},{"ruleId":"170","severity":1,"message":"178","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":20},{"ruleId":"170","severity":1,"message":"179","line":14,"column":20,"nodeType":"172","messageId":"173","endLine":14,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":84,"column":11,"nodeType":"176","endLine":84,"endColumn":28},{"ruleId":"170","severity":1,"message":"180","line":2,"column":33,"nodeType":"172","messageId":"173","endLine":2,"endColumn":42},{"ruleId":"170","severity":1,"message":"181","line":2,"column":85,"nodeType":"172","messageId":"173","endLine":2,"endColumn":96},{"ruleId":"170","severity":1,"message":"182","line":2,"column":98,"nodeType":"172","messageId":"173","endLine":2,"endColumn":104},{"ruleId":"170","severity":1,"message":"183","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":12},{"ruleId":"170","severity":1,"message":"184","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":11},{"ruleId":"170","severity":1,"message":"181","line":2,"column":108,"nodeType":"172","messageId":"173","endLine":2,"endColumn":119},{"ruleId":"174","severity":1,"message":"175","line":95,"column":33,"nodeType":"176","endLine":95,"endColumn":65},{"ruleId":"174","severity":1,"message":"175","line":113,"column":33,"nodeType":"176","endLine":113,"endColumn":65},{"ruleId":"174","severity":1,"message":"175","line":133,"column":17,"nodeType":"176","endLine":133,"endColumn":49},{"ruleId":"174","severity":1,"message":"175","line":149,"column":17,"nodeType":"176","endLine":149,"endColumn":49},{"ruleId":"174","severity":1,"message":"175","line":156,"column":17,"nodeType":"176","endLine":156,"endColumn":49},{"ruleId":"174","severity":1,"message":"175","line":172,"column":17,"nodeType":"176","endLine":172,"endColumn":49},{"ruleId":"170","severity":1,"message":"177","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":75,"column":11,"nodeType":"176","endLine":75,"endColumn":28},{"ruleId":"170","severity":1,"message":"185","line":1,"column":18,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"186","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":11},{"ruleId":"170","severity":1,"message":"187","line":4,"column":9,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"188","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":17},{"ruleId":"170","severity":1,"message":"177","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":24},{"ruleId":"170","severity":1,"message":"189","line":14,"column":8,"nodeType":"172","messageId":"173","endLine":14,"endColumn":20},{"ruleId":"170","severity":1,"message":"190","line":46,"column":9,"nodeType":"172","messageId":"173","endLine":46,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":56,"column":11,"nodeType":"176","endLine":56,"endColumn":28},{"ruleId":"170","severity":1,"message":"191","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":18},{"ruleId":"170","severity":1,"message":"179","line":14,"column":20,"nodeType":"172","messageId":"173","endLine":14,"endColumn":26},{"ruleId":"170","severity":1,"message":"192","line":14,"column":28,"nodeType":"172","messageId":"173","endLine":14,"endColumn":38},{"ruleId":"170","severity":1,"message":"193","line":49,"column":26,"nodeType":"172","messageId":"173","endLine":49,"endColumn":43},{"ruleId":"170","severity":1,"message":"194","line":50,"column":21,"nodeType":"172","messageId":"173","endLine":50,"endColumn":35},{"ruleId":"170","severity":1,"message":"195","line":51,"column":17,"nodeType":"172","messageId":"173","endLine":51,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":84,"column":11,"nodeType":"176","endLine":84,"endColumn":28},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LockOutlinedIcon' is defined but never used.","'makeStyles' is defined but never used.","'Select' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'logo' is defined but never used.","'Box' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'login' is defined but never used.","'TextField' is defined but never used.","'ReactLoading' is defined but never used.","'history' is assigned a value but never used.","'MenuItem' is defined but never used.","'InputLabel' is defined but never used.","'setdataNascimento' is assigned a value but never used.","'setAno_escolar' is assigned a value but never used.","'setEscola' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]